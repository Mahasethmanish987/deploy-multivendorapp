

services:
  web:
    build: .
    
    volumes:
      - .:/app
      
    ports:
      - "8000:8000"
    env_file:
      - .env.web
    environment:
      - DJANGO_DEBUG=False
      - GDAL_DATA=/usr/share/gdal
      - DJANGO_SETTINGS_MODULE=mysite.settings.settings
    
      
      
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput -v 3 &&
             daphne -b 0.0.0.0 -p 8000 mysite.asgi:application"



  

  

  

  
  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    command: >
      /bin/bash -c "
      # Backup original config
      cp /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf.bak
      
      # Remove SSL directives temporarily
      sed -i '/ssl_/d' /etc/nginx/conf.d/default.conf
      sed -i '/listen 443/d' /etc/nginx/conf.d/default.conf
      
      # Start NGINX in background
      nginx -g 'daemon off;' &
      
      # Wait for certificates
      while [ ! -f /etc/letsencrypt/live/foodonline.run.place/fullchain.pem ]; do
        echo 'Waiting for certificates...'
        sleep 5
      done
      
      # Restore original config
      mv /etc/nginx/conf.d/default.conf.bak /etc/nginx/conf.d/default.conf
      
      # Reload NGINX with SSL config
      nginx -s reload
      
      # Keep container running
      wait"
    restart: unless-stopped
    depends_on:
      - web
        

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    command: >
      /bin/bash -c "
      sleep 15
      certbot certonly --webroot -w /var/www/certbot
        --email mahasethmanish63@gmail.com
        --agree-tos --no-eff-email
        -d foodonline.run.place
        -d www.foodonline.run.place
        --non-interactive
      
      if [ -f /etc/letsencrypt/live/foodonline.run.place/fullchain.pem ]; then
        echo 'SUCCESS: Certificates created!'
      else
        echo 'ERROR: Certificate creation failed' >&2
        exit 1
      fi"
    restart: on-failure
    depends_on:
      - nginx